<?php

/**
 * @file
 * Test module for the entity API providing a bundle field.
 */

use Drupal\Core\Field\FieldDefinition;

/**
 * Tracks whether the module is currently being uninstalled.
 *
 * @param bool|null $value
 *   (optional) If set, the value any subsequent calls should return.
 *
 * @return bool
 *   Whether the module is currently uninstalling.
 */
function entity_bundle_field_test_is_uninstalling($value = NULL) {
  $static = &drupal_static(__FUNCTION__, FALSE);
  if (isset($value)) {
    $static = $value;
  }
  return $static;
}

/**
 * Implements hook_entity_field_storage_info().
 */
function entity_bundle_field_test_entity_field_storage_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  if ($entity_type->id() == 'entity_test' && !entity_bundle_field_test_is_uninstalling()) {
    // @todo: Make use of a FieldStorageDefinition class instead of
    // FieldDefinition as this should not implement FieldDefinitionInterface.
    // See https://drupal.org/node/2280639.
    $definitions['custom_field'] = FieldDefinition::create('string')
      ->setName('custom_field')
      ->setLabel(t('A custom field'))
      ->setTargetEntityTypeId($entity_type->id());
    return $definitions;
  }
}

/**
 * Implements hook_entity_bundle_field_info().
 */
function entity_bundle_field_test_entity_bundle_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  if ($entity_type->id() == 'entity_test' && $bundle == 'custom' && !entity_bundle_field_test_is_uninstalling()) {
    $definitions['custom_field'] = FieldDefinition::create('string')
      ->setName('custom_field')
      ->setLabel(t('A custom field'));
    return $definitions;
  }
}

/**
 * Implements hook_entity_bundle_delete().
 */
function entity_bundle_field_test_entity_bundle_delete($entity_type_id, $bundle) {
  if ($entity_type_id == 'entity_test' && $bundle == 'custom') {
    // Notify the entity storage that our field is gone.
    $field_definition = FieldDefinition::create('string')
      ->setTargetEntityTypeId($entity_type_id)
      ->setBundle($bundle)
      ->setName('custom_field')
      ->setLabel(t('A custom field'));
    \Drupal::entityManager()->getStorage('entity_test')
      ->onFieldDefinitionDelete($field_definition);
  }
}
